

Null Safety
-> Null에 대해서 안전하다.
-> 코틀린의 특징

Null vs 0
-> 휴지를 다쓰고 휴지만 남은 상태 0
-> 휴지심도 없는 상태, 존재 하지 않는 상태, 모르는 상태 Null

Null이 안전하지 않은 이유

-> 0 + 10 = 10
-> Null + 10 = ? - > 에러
-> button.setOnClickListener
-> null.setOnClickListener - > 에러
=> NullPointExceptionError -> 발생한다.


if(number != null) {
  number + 10
 }

 if(button != null) {
 button.setOnClickListener
 }

코틀린이 Null Safety 하기 위해서 사용하는 문법
=> ?    : Null이 아니라면 이하 구문 실행
=> !!   : Null이 아님을 개발자가 보증한다.


사용방법
ex)
button?.setOnClickListener  => 이 버튼이 Null이 아니라면
button!!.setOnClickListener => 이 버튼은 Null이 아니야!! (만약 Null이면 에러가 뜸 + 많이 안사용한다 + 100%는 위험!)

Null이 될 수 있는 타입

Int, Double, Float, Class -> Null이 될 수 없는 타입
Int?, Double?, Float?, Class? -> Null이 될 수 있는 타입
